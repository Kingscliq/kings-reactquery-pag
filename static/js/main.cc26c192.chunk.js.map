{"version":3,"sources":["api/index.js","design/elements/Text.js","design/elements/Container.js","design/elements/Card.js","components/person.js","design/assets/img/loader.svg","design/elements/Loader.js","design/elements/Button.js","components/people.js","components/planet.js","components/planets.js","design/widgets/nav-bar.js","design/GlobalStyles.js","design/theme.js","App.js","index.js"],"names":["api","axios","create","baseURL","getPeople","a","page","get","res","data","getPlanets","Text","styled","p","space","position","typography","color","border","display","Container","section","Card","div","layout","flexbox","grid","Person","person","bg","my","fontSize","name","gender","hair_color","loaderStyles","height","width","justifyContent","alignItems","Loader","style","src","InfiniteLoader","alt","Button","button","props","theme","colors","light","text","People","React","useState","setPage","useQuery","keepPreviousData","isLoading","isError","isPreviousData","console","log","textAlign","results","map","mr","px","py","disabled","onClick","next","oldPage","Planet","planet","population","terrain","Planets","Navbar","GlobalStyles","createGlobalStyle","background","lightGrey","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.cc26c192.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://swapi.dev/api/\",\r\n});\r\n\r\nexport const getPeople = async (page = 1) => {\r\n  const res = await api.get(`/people/?page=${page}`);\r\n  return res.data;\r\n};\r\nexport const getPlanets = async (page = 1) => {\r\n  const res = await api.get(`/planets/?page=${page}`);\r\n  return res.data;\r\n};\r\n","import styled from \"styled-components\";\r\nimport {\r\n\tspace,\r\n\tposition,\r\n\ttypography,\r\n\tcolor,\r\n\tborder,\r\n\tdisplay,\r\n} from \"styled-system\";\r\n\r\nconst Text = styled.p`\r\n\t${space}\r\n\t${position}\r\n${typography}\r\n${color}\r\n${border}\r\n${display}\r\n`;\r\n\r\nexport default Text;\r\n","import styled from \"styled-components\";\r\nimport {\r\n\tspace,\r\n\tposition,\r\n\ttypography,\r\n\tcolor,\r\n\tborder,\r\n\tdisplay,\r\n} from \"styled-system\";\r\nconst Container = styled.section`\r\n\twidth: 968px;\r\n\tmargin: auto;\r\n\t${space}\r\n\t${position}\r\n\t${typography}\r\n\t${color}\r\n\t${border}\r\n\t${display}\r\n`;\r\n\r\nexport default Container;\r\n","import styled from \"styled-components\";\r\nimport { layout, flexbox, grid, space, color } from \"styled-system\";\r\n\r\nconst Card = styled.div`\r\n\tpadding: 20px 40px;\r\n\t${layout}\r\n\t${flexbox}\r\n    ${grid}\r\n    ${space}\r\n    ${color}\r\n`;\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../design/elements/Card\";\r\nimport Text from \"../design/elements/Text\";\r\n\r\nconst Person = ({ person }) => {\r\n\treturn (\r\n\t\t<Card bg=\"black\" my=\"30px\">\r\n\t\t\t<Text fontSize=\"18px\">{person.name}</Text>\r\n\t\t\t<Text color=\"#aaa\" fontSize=\"14px\">\r\n\t\t\t\tGender- {person.gender}\r\n\t\t\t</Text>\r\n\t\t\t<Text color=\"#aaa\" fontSize=\"14px\">\r\n\t\t\t\tHair Color - {person.hair_color}\r\n\t\t\t</Text>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Person;\r\n","export default __webpack_public_path__ + \"static/media/loader.0a5ab327.svg\";","import React from \"react\";\r\nimport InfiniteLoader from \"../assets/img/loader.svg\";\r\nimport Text from \"../../design/elements/Text\";\r\n\r\nconst loaderStyles = {\r\n\theight: \"500px\",\r\n\twidth: \"100%\",\r\n\tdisplay: \"flex\",\r\n\tjustifyContent: \"center\",\r\n\talignItems: \"center\",\r\n};\r\nconst Loader = () => {\r\n\treturn (\r\n\t\t<div style={loaderStyles}>\r\n\t\t\t<img src={InfiniteLoader} alt=\"Loading Data\" height=\"50\" width=\"50\" />\r\n\t\t\t<Text>Loading ...</Text>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\n\r\nimport {\r\n\tspace,\r\n\tposition,\r\n\ttypography,\r\n} from \"styled-system\";\r\n\r\nconst Button = styled.button`\r\n\t\r\n\tfont-size: 1.2rem;\r\n\tcolor: ${(props) => props.theme.colors.light};\r\n\tborder: 1px solid ${(props) => props.theme.colors.text};\r\n\t${space}\r\n\t${position}\r\n    ${typography}\r\n\t:active {\r\n\t\tborder-color: ${(props) => props.theme.colors.text};\r\n\t}\r\n\t:hover{\r\n\t\tcursor: pointer\r\n\t}\r\n\t:disabled{\r\n\t\tcursor: no-drop;\r\n\t\topacity: 0.5\r\n\t}\r\n`;\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport * as api from \"../api\";\r\nimport Text from \"../design/elements/Text\";\r\nimport Container from \"../design/elements/Container\";\r\nimport Person from \"./person\";\r\nimport InfiniteLoader from \"../design/elements/Loader\";\r\nimport Button from \"../design/elements/Button\";\r\n\r\nconst People = () => {\r\n  const [page, setPage] = React.useState(1);\r\n  const { data, isLoading, isError, isPreviousData } = useQuery([\"people\", page], \r\n  () => api.getPeople(page), \r\n\t{keepPreviousData: true}\r\n  );\r\n  console.log(data);\r\n  return (\r\n    <Container>\r\n      <Text fontSize=\"2rem\" textAlign=\"center\">\r\n        People\r\n      </Text>\r\n      {isLoading ? <InfiniteLoader /> : null}\r\n      {isError ? <Text>Error fetching Data...</Text> : null}\r\n      {data\r\n        ? data.results.map((person) => {\r\n            return <Person person={person} key={person.name} />;\r\n          })\r\n        : null}\r\n\r\n      {data && (\r\n        <>\r\n          <Text fontSize=\"1rem\" color=\"#fff\" my=\"1rem\">\r\n            Current Page - {page}\r\n          </Text>\r\n          <Button\r\n            fontSize=\"1rem\"\r\n            my=\"20px\"\r\n            mr=\"10px\"\r\n            px=\"50px\"\r\n            py=\"10px\"\r\n\t\t\tdisabled = {page === 1 }\r\n            onClick={() => setPage(page - 1)}\r\n          >\r\n            Previous Page\r\n          </Button>\r\n          <Button\r\n            fontSize=\"1rem\"\r\n            my=\"20px\"\r\n            mr=\"10px\"\r\n            px=\"50px\"\r\n            py=\"10px\"\r\n\t\t\tdisabled={!data.next}\r\n            onClick={() => {\r\n              if (!isPreviousData && data?.next) {\r\n                setPage((oldPage) => oldPage + 1);\r\n              } else {\r\n                return page;\r\n              }\r\n            }}\r\n          >\r\n            Next Page\r\n          </Button>\r\n        </>\r\n      )}\r\n      {/* <Text>Hello World</Text> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React from \"react\";\r\nimport Card from \"../design/elements/Card\";\r\nimport Text from \"../design/elements/Text\";\r\n\r\nconst Planet = ({ planet }) => {\r\n\treturn (\r\n\t\t<Card bg=\"black\" my=\"30px\">\r\n\t\t\t<Text fontSize=\"18px\">{planet.name}</Text>\r\n\t\t\t<Text color=\"#aaa\" fontSize=\"14px\">\r\n\t\t\t\tPopulation - {planet.population}\r\n\t\t\t</Text>\r\n\t\t\t<Text color=\"#aaa\" fontSize=\"14px\">\r\n\t\t\t\tTerrain - {planet.terrain}\r\n\t\t\t</Text>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Planet;\r\n","import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport * as api from \"../api\";\r\nimport Text from \"../design/elements/Text\";\r\nimport Container from \"../design/elements/Container\";\r\nimport Planet from \"./planet\";\r\nimport InfiniteLoader from \"../design/elements/Loader\";\r\nimport Button from \"../design/elements/Button\";\r\n\r\n\r\nconst Planets = () => {\r\n\t\r\n\tconst [page, setPage] = React.useState(1);\r\n\r\n\r\n\t\r\n\r\n\tconst { data, isPreviousData, isLoading, isError } = useQuery(\r\n\t\t\r\n\t\t[\"planets\", page],\r\n\t\t() => api.getPlanets(page),\r\n\t\t{ keepPreviousData: true },\r\n\t);\r\n\tconsole.log(data);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Text fontSize=\"2rem\" textAlign=\"center\">\r\n\t\t\t\tPlanets\r\n\t\t\t</Text>\r\n\r\n\t\t\t{isLoading ? <InfiniteLoader /> : null}\r\n\t\t\t\r\n\t\t\t{isError ? (\r\n\t\t\t\t<Text color=\"red\">Error fetching Data...</Text>\r\n\t\t\t) : null}\r\n\t\t\t{data\r\n\t\t\t\t? data.results.map((planet) => {\r\n\t\t\t\t\t\treturn <Planet planet={planet} key={planet.name} />;\r\n\t\t\t\t  })\r\n\t\t\t\t: null}\r\n\r\n\t\t\t{/* <Text>Hello World</Text> */}\r\n\t\t\t{data && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Text fontSize=\"1rem\" color=\"#fff\" my=\"1rem\">\r\n\t\t\t\t\t\tCurrent Page - {page}\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tfontSize=\"1rem\"\r\n\t\t\t\t\t\tmy=\"20px\"\r\n\t\t\t\t\t\tmr=\"10px\"\r\n\t\t\t\t\t\tpx=\"50px\"\r\n\t\t\t\t\t\tpy=\"10px\"\r\n\t\t\t\t\t\tdisabled={page === 1}\r\n\t\t\t\t\t\tonClick={() => setPage(page - 1)}>\r\n\t\t\t\t\t\tPrevious Page\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tfontSize=\"1rem\"\r\n\t\t\t\t\t\tmy=\"20px\"\r\n\t\t\t\t\t\tmr=\"10px\"\r\n\t\t\t\t\t\tpx=\"50px\"\r\n\t\t\t\t\t\tpy=\"10px\"\r\n\t\t\t\t\t\tdisabled={isPreviousData || !data.next}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tif (!isPreviousData && data?.next) {\r\n\t\t\t\t\t\t\t\tsetPage((oldPage) => oldPage + 1);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn page;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tNext Page\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Planets;\r\n","import React from \"react\";\r\nimport Button from \"../elements/Button\";\r\nimport Container from \"../elements/Container\";\r\nimport Text from \"../elements/Text\";\r\nconst Navbar = ({ setPage }) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<nav>\r\n\t\t\t\t<Text fontSize=\"3rem\" textAlign=\"center\">\r\n\t\t\t\t\tStar Wars\r\n\t\t\t\t</Text>\r\n\t\t\t\t<div style={{display: 'flex', justifyContent:'center', alignItems:'center'}}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\tmy=\"20px\"\r\n\t\t\t\t\t\tmr=\"10px\"\r\n\t\t\t\t\t\tpx=\"70px\"\r\n\t\t\t\t\t\tpy=\"10px\"\r\n\t\t\t\t\t\tonClick={() => setPage(\"planets\")}>\r\n\t\t\t\t\t\tPlanets\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tmy=\"20px\"\r\n\t\t\t\t\t\tpx=\"70px\"\r\n\t\t\t\t\t\tpy=\"10px\"\r\n\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\tonClick={() => setPage(\"people\")}>\r\n\t\t\t\t\t\tPeople\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n\r\n@font-face{\r\n    font-family: \"Poppins\", sans-serif;\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    font-display: swap;\r\n    src: inherit;\r\n}\r\n\r\n*{\r\nbox-sizing: border-box;\r\n margin: 0;\r\n padding: 0;\r\n}\r\nhtml{\r\n font-size: 16px;\r\n color: ${(props) => props.theme.colors.text};\r\n overflow-x: hidden;\r\n box-sizing: border-box;\r\n \r\n}\r\n\r\nbody{\r\n    background: ${(props) => props.theme.colors.background};\r\n}\r\n\r\nbutton{\r\n    border: none;\r\n    padding: 0;\r\n    background: inherit;\r\n    font-family: inherit;\r\n    appearance:   none\r\n}\r\n\r\n\r\n\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","const theme = {\r\n\tcolors: {\r\n\t\ttext: \"#2be02b\",\r\n\t\tbackground: \"#222\",\r\n\t\tlight: \"#f4f4f4\",\r\n\t\tlightGrey: \"#bfc9bf\",\r\n\t},\r\n};\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\n// import { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport People from \"./components/people\";\r\nimport Planets from \"./components/planets\";\r\nimport Navbar from \"./design/widgets/nav-bar\";\r\nimport GlobalStyles from \"./design/GlobalStyles\";\r\nimport theme from \"./design/theme\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\n// import { ReactQueryConfigProvider } from \"react-query\";\r\nfunction App() {\r\n\tconst [page, setPage] = React.useState(\"planets\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t\t<GlobalStyles />\r\n\t\t\t\t\t<Navbar setPage={setPage} />\r\n\t\t\t\t\t{page === \"planets\" ? <Planets /> : <People />}\r\n\t\t\t\t</ThemeProvider>\r\n\r\n\t\t\t\t<ReactQueryDevtools initialIsOpen={false} />\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { QueryClientProvider, QueryClient } from 'react-query';\r\n\r\n\r\nconst queryClient = new QueryClient();\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <QueryClientProvider client={queryClient}>\r\n\r\n    <App />\r\n    </QueryClientProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}